Timer unit: 1e-09 s

Total time: 10035.7 s
File: /resnick/groups/changroup/members/junjiey/fftisdf-for-dmet/test/test-8-8-10/main.py
Function: main at line 5

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     5                                           @profile
     6                                           def main(config: dict):
     7         1    3895233.0    4e+06      0.0      from utils import build
     8         1        1e+13    1e+13     96.5      build(config)
     9                                           
    10         1       1794.0   1794.0      0.0      cell = config["cell"]
    11         1        670.0    670.0      0.0      df_obj = config["df"]
    12         1        269.0    269.0      0.0      kpts = config["kpts"]
    13         1       1474.0   1474.0      0.0      nkpt = nimg = len(kpts)
    14                                           
    15         1        216.0    216.0      0.0      dm0 = config["dm0"]
    16         1      35052.0  35052.0      0.0      nao = cell.nao_nr()
    17         1        776.0    776.0      0.0      natm = cell.natm
    18                                           
    19         1    2668853.0    3e+06      0.0      log = open("out.log", "w")
    20         1       3352.0   3352.0      0.0      log.write("method = %s\n" % config["density_fitting_method"])
    21         1       1280.0   1280.0      0.0      log.write("basis = %s\n" % config["basis"])
    22         1       1258.0   1258.0      0.0      log.write("natm = %d\n" % natm)
    23         1        656.0    656.0      0.0      log.write("nkpt = %d\n" % nkpt)
    24         1        588.0    588.0      0.0      log.write("nao = %d\n" % nao)
    25         1      13027.0  13027.0      0.0      log.flush()
    26                                           
    27         1       3709.0   3709.0      0.0      t0 = time.time()
    28         1        1e+11    1e+11      1.3      df_obj.build()
    29         1      21971.0  21971.0      0.0      log.write("time_build_df = % 6.2f\n" % (time.time() - t0))
    30                                           
    31         1       1893.0   1893.0      0.0      df_path = config["df_path"]
    32         1      42975.0  42975.0      0.0      if os.path.exists(df_path):
    33         1      22114.0  22114.0      0.0          df_size_in_byte = float(os.path.getsize(df_path))
    34         1       4177.0   4177.0      0.0          df_size_in_giga = df_size_in_byte / (1024 ** 3)
    35         1      16449.0  16449.0      0.0          print("df_size_in_byte = % 6.2e" % df_size_in_byte)
    36         1       5070.0   5070.0      0.0          print("df_size_in_giga = % 6.2e" % df_size_in_giga)
    37                                           
    38         1       4000.0   4000.0      0.0          log.write("df_size_in_gb = % 6.2e\n" % df_size_in_giga)
    39                                           
    40         1       1002.0   1002.0      0.0      naux = None
    41         1       7798.0   7798.0      0.0      if isinstance(df_obj, fft.ISDF):
    42         1      16446.0  16446.0      0.0          naux = df_obj.inpv_kpt.shape[1]
    43                                               else:
    44                                                   naux = df_obj.get_naoaux()
    45         1        720.0    720.0      0.0      if naux is not None:
    46         1       4288.0   4288.0      0.0          log.write("naux = %d\n" % naux)
    47                                           
    48         1       1925.0   1925.0      0.0      t0 = time.time()
    49         1        929.0    929.0      0.0      scf_obj = config["mf"]
    50         1      18915.0  18915.0      0.0      scf_obj.exxdiv = "ewald"
    51         1      28466.0  28466.0      0.0      scf_obj.with_df = df_obj
    52         1        2e+10    2e+10      0.2      ene_krhf = scf_obj.kernel(dm0)
    53         1      12033.0  12033.0      0.0      log.write("time_krhf = % 6.2f\n" % (time.time() - t0))
    54         1       3154.0   3154.0      0.0      log.write("ene_krhf = % 12.8f\n" % ene_krhf)
    55         1      14655.0  14655.0      0.0      log.flush()
    56                                           
    57         1   20556453.0    2e+07      0.0      dm0 = scf_obj.make_rdm1()
    58         1       2414.0   2414.0      0.0      t0 = time.time()
    59         1 1742484204.0    2e+09      0.0      vjk = scf_obj.get_jk(dm_kpts=dm0, hermi=1, with_j=True, with_k=False)
    60         1       3861.0   3861.0      0.0      log.write("time_get_j = % 6.2f\n" % (time.time() - t0))
    61         1       4279.0   4279.0      0.0      log.flush()
    62                                           
    63         1        514.0    514.0      0.0      t0 = time.time()
    64         1 2853465969.0    3e+09      0.0      vjk = scf_obj.get_jk(dm_kpts=dm0, hermi=1, with_j=False, with_k=True)
    65         1       4451.0   4451.0      0.0      log.write("time_get_k = % 6.2f\n" % (time.time() - t0))
    66         1       4442.0   4442.0      0.0      log.flush()
    67                                               
    68         1   17754148.0    2e+07      0.0      import dmet
    69         1       1684.0   1684.0      0.0      from dmet import build_dmet
    70         1       1618.0   1618.0      0.0      from dmet import get_emb_eri_fftisdf
    71         1        570.0    570.0      0.0      get_emb_eri_old = libdmet.basis.trans_2e.get_emb_eri    
    72                                           
    73         1        603.0    603.0      0.0      def get_emb_eri(*args, **kwargs):
    74                                                   df_obj = args[0]
    75                                                   eri_emb = None
    76                                           
    77                                                   t0 = time.time()
    78                                                   if isinstance(df_obj, fft.ISDF):
    79                                                       kwargs.pop('use_mpi')
    80                                                       eri_emb = get_emb_eri_fftisdf(*args, **kwargs)
    81                                                   else:
    82                                                       eri_emb = get_emb_eri_old(*args, **kwargs)
    83                                           
    84                                                   log.write("time_get_eri = % 6.2f\n" % (time.time() - t0))
    85                                                   assert eri_emb is not None
    86                                                   return eri_emb
    87         1        453.0    453.0      0.0      libdmet.basis.trans_2e.get_emb_eri = get_emb_eri
    88                                               
    89         1 9077245721.0    9e+09      0.1      build_dmet(config)
    90                                           
    91         1        406.0    406.0      0.0      emb = config["emb"]
    92         1        2e+11    2e+11      1.9      emb.kernel()
    93         1       1384.0   1384.0      0.0      ene_dmet = emb.e_tot
    94                                               
    95         1       8488.0   8488.0      0.0      log.write("time_dmet = % 6.2f\n" % (time.time() - t0))
    96         1       1474.0   1474.0      0.0      log.write("ene_dmet = % 12.8f\n" % ene_dmet)
    97         1       7944.0   7944.0      0.0      log.flush()

10035.69 seconds - /resnick/groups/changroup/members/junjiey/fftisdf-for-dmet/test/test-8-8-10/main.py:5 - main
