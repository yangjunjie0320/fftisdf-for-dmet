SLURMD_NODENAME = hpc-35-09
Start time = Thu May 29 03:41:07 PM PDT 2025
/central/home/junjiey/anaconda3/bin/activate
OMP_NUM_THREADS = 32
MKL_NUM_THREADS = 1
OPENBLAS_NUM_THREADS = 1
PYSCF_MAX_MEMORY = 327680
TMPDIR = /resnick/scratch/yangjunjie//diamond-klno-2-2-3-gth-dzvp-fftisdf-150-15/49881996/
PYSCF_TMPDIR = /resnick/scratch/yangjunjie//diamond-klno-2-2-3-gth-dzvp-fftisdf-150-15/49881996/

Running /resnick/groups/changroup/members/junjiey/fftisdf-for-dmet/benchmark/diamond/klno/2-2-3/gth-dzvp/fftisdf/150/15/main.py with:
name: diamond
xc: None
kmesh: 2-2-3
basis: gth-dzvp
pseudo: gth-pbe
lno_thresh: 3e-05
density_fitting_method: fftisdf-150-15
is_unrestricted: False
init_guess_method: minao
df_to_read: None


Using FFTISDF, method = fftisdf-150-15
ke_cutoff = 150.0, mesh = [29 29 29]
Using ke_cutoff = 150.0, c0 = 15.0
Big error detected in the electron number of initial guess density matrix (Ne/cell = 7.96515)!
  This can cause huge error in Fock matrix and lead to instability in SCF for low-dimensional systems.
  DM is normalized wrt the number of electrons 8.0
 ** Mulliken pop on meta-lowdin orthogonal AOs **
 ** Mulliken pop  **
pop of  0 C 2s            1.77123
pop of  0 C 3s            0.00000
pop of  0 C 2px           0.74269
pop of  0 C 2py           0.74269
pop of  0 C 2pz           0.74339
pop of  0 C 3px           0.00000
pop of  0 C 3py           0.00000
pop of  0 C 3pz           0.00000
pop of  0 C 3dxy          0.00000
pop of  0 C 3dyz          0.00000
pop of  0 C 3dz^2         0.00000
pop of  0 C 3dxz          0.00000
pop of  0 C 3dx2-y2       0.00000
pop of  1 C 2s            1.77123
pop of  1 C 3s            0.00000
pop of  1 C 2px           0.74269
pop of  1 C 2py           0.74269
pop of  1 C 2pz           0.74339
pop of  1 C 3px           0.00000
pop of  1 C 3py           0.00000
pop of  1 C 3pz           0.00000
pop of  1 C 3dxy          0.00000
pop of  1 C 3dyz          0.00000
pop of  1 C 3dz^2         0.00000
pop of  1 C 3dxz          0.00000
pop of  1 C 3dx2-y2       0.00000
 ** Mulliken atomic charges  **
charge of    0C =      0.00000
charge of    1C =      0.00000


******** <class 'fft.isdf.InterpolativeSeparableDensityFitting'> ********
mesh = [29 29 29] (24389 PWs)
len(kpts) = 12
tol = 1e-08
c0 = 15.0
wrap_around = True

WARN: ke_cutoff/mesh (150 / [29 29 29]) is not enough for FFTDF to get integral accuracy 1e-08.
Coulomb integral error is ~ 0.042 Eh.
Recommended ke_cutoff/mesh are 422.908 / [47 47 47].

Traceback (most recent call last):
  File "/resnick/groups/changroup/members/junjiey/fftisdf-for-dmet/benchmark/diamond/klno/2-2-3/gth-dzvp/fftisdf/150/15/main.py", line 108, in <module>
    main(config)
  File "/resnick/groups/changroup/members/junjiey/fftisdf-for-dmet/benchmark/diamond/klno/2-2-3/gth-dzvp/fftisdf/150/15/main.py", line 13, in main
    df_obj.build()
  File "/resnick/groups/changroup/members/junjiey/fftisdf-for-dmet/src/fftisdf-main/fft/isdf.py", line 298, in build
    inpv_kpt = self.build_inpv_kpt(tol=tol2, inpx=inpx)
  File "/resnick/groups/changroup/members/junjiey/fftisdf-for-dmet/src/fftisdf-main/fft/isdf.py", line 147, in build_inpv_kpt
    kpts, kmesh = kpts_to_kmesh(cell, self.kpts, wrap_around)
  File "/resnick/groups/changroup/members/junjiey/fftisdf-for-dmet/src/fftisdf-main/fft/isdf_jk.py", line 18, in kpts_to_kmesh
    assert numpy.allclose(kpts, cell.get_kpts(kmesh, wrap_around=wrap_around))
AssertionError
End time = Thu May 29 03:41:08 PM PDT 2025
